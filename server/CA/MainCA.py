# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Tucil-3-KriptoKoding.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from flask import Flask, jsonify, request
from flask_cors import CORS
import io
import json

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox
from Tanda_Tangan import *
from Pembangkitan_Kunci import *
from Baca_File import *

app = Flask(__name__)
CORS(app)

@app.route('/api/key', methods=['POST'])
def genkey():
    data = request.json
    q = data['q']
    # filename = request.args.get('q')
    filename = q
    writeKey(filename) 
    return jsonify({'message': 'Key generated successfully'})
    
    #ini dari pembangkitan_kunci.py
    # self.popupnotifbiasa("Kunci telah berhasil dibuat")

@app.route('/api/data', methods=['POST'])
def handle_data():
    data = request.json

    # Lakukan pemrosesan data di sini
    # ...

    # Kirim tanggapan kembali ke sisi client jika diperlukan
    response = {'message': 'Data received and processed successfully'}
    return jsonify(response)

if __name__ == '__main__':
    app.run()